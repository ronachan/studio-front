{"version":3,"sources":["components/CustomButtonComponent.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Button","border","color","children","height","onClick","radius","width","style","backgroundColor","borderRadius","App","useState","title","setTitle","rating","setRating","release","setRelease","handleClick","a","fetch","response","json","randomTitle","Math","floor","random","length","rt_score","release_date","console","log","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6PAqCeA,EAzBiB,SAAC,GAQxB,IAPLC,EAOI,EAPJA,OACAC,EAMI,EANJA,MACAC,EAKI,EALJA,SACAC,EAII,EAJJA,OACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,OACAC,EACI,EADJA,MAEF,OACE,wBACEF,QAASA,EACTG,MAAO,CACJC,gBAAiBP,EACjBD,SACAS,aAAcJ,EACdF,SACAG,SAPL,SAUCJ,KCeUQ,EA3CH,WAAO,IAAD,EACUC,mBAAS,IADnB,mBACTC,EADS,KACFC,EADE,OAEYF,mBAAS,IAFrB,mBAETG,EAFS,KAEDC,EAFC,OAGcJ,mBAAS,IAHvB,mBAGTK,EAHS,KAGAC,EAHA,KAKVC,EAAW,uCAAG,gCAAAC,EAAA,4DACN,wCADM,kBAIOC,MAHb,yCADM,cAIVC,EAJU,gBAKGA,EAASC,OALZ,OAKVA,EALU,OAMZC,EAAsBC,KAAKC,MAAMD,KAAKE,SAASJ,EAAKK,QACxDd,EAASS,EAAKC,GAAaX,OAC3BG,EAAUO,EAAKC,GAAaK,UAC5BX,EAAWK,EAAKC,GAAaM,cATb,kDAWhBC,QAAQC,IAAI,QAAZ,MAXgB,0DAAH,qDAejB,OACE,qBAAKC,UAAU,YAAf,SACE,qBAAKA,UAAU,mBAAf,SACE,sBAAKA,UAAY,WAAjB,UACA,sEACE,wCAAWpB,KACX,yCAAYE,KACZ,gDAAmBE,KACrB,cAAC,EAAD,CACEhB,OAAS,OACTC,MAAQ,OACRE,OAAS,OACTC,QAAWc,EACXb,OAAS,MACTC,MAAQ,QACRJ,SAAW,mBCzBN+B,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a66a2cf3.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\ninterface Props {\r\n  border: string;\r\n  color: string;\r\n  children?: React.ReactNode;\r\n  height: string;\r\n  onClick: () => void;\r\n  radius: string\r\n  width: string;\r\n}\r\n\r\nconst Button: React.FC<Props> = ({ \r\n    border,\r\n    color,\r\n    children,\r\n    height,\r\n    onClick, \r\n    radius,\r\n    width\r\n  }) => { \r\n  return (\r\n    <button \r\n      onClick={onClick}\r\n      style={{\r\n         backgroundColor: color,\r\n         border,\r\n         borderRadius: radius,\r\n         height,\r\n         width\r\n      }}\r\n    >\r\n    {children}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default Button;\r\n","import React, {useState } from 'react';\r\nimport './App.css';\r\nimport Button from \"./components/CustomButtonComponent\";\r\n\r\nconst App = () => {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [rating, setRating] = useState(\"\");\r\n  const [release, setRelease] = useState(\"\");\r\n\r\n  const handleClick = async() => {\r\n    const url = \"https://lit-wave-20923.herokuapp.com/\";\r\n\r\n    try {\r\n      const response = await fetch(url);\r\n      const json = await response.json();\r\n      let randomTitle: number = Math.floor(Math.random()*json.length);\r\n      setTitle(json[randomTitle].title);\r\n      setRating(json[randomTitle].rt_score);\r\n      setRelease(json[randomTitle].release_date);\r\n    }catch(error){\r\n      console.log(\"error\", error);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"homepage-bgimage\">\r\n        <div className = \"centered\">\r\n        <h1>Stuido Ghibli Films Random Generator</h1>\r\n          <p>Title: {title}</p>\r\n          <p>Rating: {rating}</p>\r\n          <p>Year Released: {release}</p>\r\n        <Button \r\n          border = \"none\"\r\n          color = \"pink\"\r\n          height = \"65px\"\r\n          onClick = {handleClick}\r\n          radius = \"25%\"\r\n          width = \"150px\"\r\n          children = \"Random\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}