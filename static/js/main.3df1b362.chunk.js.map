{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["getTitleData","a","fetch","response","json","MyTitleList","props","console","log","className","scope","titleData","map","title","description","release_date","rt_score","App","useState","setTitleData","rating","release","current","setCurrent","useEffect","then","handleClick","length","randomTitle","Math","floor","random","error","type","onClick","moreData","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mQAOMA,EAAY,uCAAG,8BAAAC,EAAA,sEACIC,MAHb,yCAES,cACbC,EADa,gBAEAA,EAASC,OAFT,cAEbA,EAFa,yBAGZA,GAHY,2CAAH,qDAMZC,EAAc,SAACC,GAUnB,OADAC,QAAQC,IAAIF,GAEV,wBAAOG,UAAU,uDAAjB,UACE,gCACE,+BACE,oBAAIC,MAAM,MAAV,wBACA,oBAAIA,MAAM,MAAV,yBACA,oBAAIA,MAAM,MAAV,2BACA,oBAAIA,MAAM,MAAV,yBAGJ,gCACGJ,EAAMK,UAAUC,KACf,SAACC,GAMC,OACE,+BACE,6BAAKA,EAAMA,QACX,6BAAKA,EAAMC,cACX,6BAAKD,EAAME,eACX,6BAAKF,EAAMG,uBAiEZC,EAvDH,WAAO,IAAD,EACkBC,mBAAS,IAD3B,mBACTP,EADS,KACEQ,EADF,OAEcD,mBAAS,CACrCL,MAAO,GACPO,OAAQ,GACRC,QAAS,KALK,mBAETC,EAFS,KAEAC,EAFA,KAQhBC,qBAAU,WACRxB,IAAeyB,KAAKN,KACnB,IAEH,IAAMO,EAAW,uCAAG,oCAAAzB,EAAA,sDAClB,IACMU,EAAUgB,OAAS,IACjBC,EAAsBC,KAAKC,MAAMD,KAAKE,SAAWpB,EAAUgB,QADvC,EAEkBhB,EAAUiB,GAA5Cf,EAFgB,EAEhBA,MAAOG,EAFS,EAETA,SAAUD,EAFD,EAECA,aACzBQ,EAAW,CAAEV,MAAOA,EAAOO,OAAQJ,EAAUK,QAASN,KAExD,MAAOiB,GACPzB,QAAQC,IAAI,QAASwB,GARL,2CAAH,qDAYjB,OACE,qBAAKvB,UAAU,cAAf,SACE,sBAAKA,UAAU,mBAAf,UACE,gCAEE,oBAAIA,UAAU,OAAd,kDACA,uBACA,sBAAKA,UAAU,6CAAf,UACE,6BAAKa,EAAQT,QACb,4BAC8B,IAAzBS,EAAQT,MAAMc,OAAhB,0BACsBL,EAAQD,QAD9B,yBACsDC,EAAQF,QAC3D,+CAGR,wBACEa,KAAK,SACLxB,UAAU,uBACVyB,QAASR,EAHX,4BAQF,qBAAKjB,UAAU,YAAf,SACE,cAAC,EAAD,CAAaE,UAAWA,EAAWwB,SAAU,2BC1FxCC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.3df1b362.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport \"bootstrap\";\r\n// import $ from \"jquery\";\r\n// import { BootstrapTable, TableHeaderColumn } from \"react-bootstrap-table\";\r\nconst url = \"https://lit-wave-20923.herokuapp.com/\";\r\n\r\nconst getTitleData = async () => {\r\n  const response = await fetch(url);\r\n  const json = await response.json();\r\n  return json;\r\n};\r\n\r\nconst MyTitleList = (props: {\r\n  moreData: string;\r\n  titleData: {\r\n    title: string;\r\n    description: string;\r\n    release_date: string;\r\n    rt_score: string;\r\n  }[];\r\n}) => {\r\n  console.log(props);\r\n  return (\r\n    <table className=\"table table-bordered table-hover all-data-table px-3\">\r\n      <thead>\r\n        <tr>\r\n          <th scope=\"col\">Film Title</th>\r\n          <th scope=\"col\">Description</th>\r\n          <th scope=\"col\">Year Released</th>\r\n          <th scope=\"col\">Rating</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {props.titleData.map(\r\n          (title: {\r\n            title: string;\r\n            description: string;\r\n            release_date: string;\r\n            rt_score: string;\r\n          }) => {\r\n            return (\r\n              <tr>\r\n                <td>{title.title}</td>\r\n                <td>{title.description}</td>\r\n                <td>{title.release_date}</td>\r\n                <td>{title.rt_score}</td>\r\n              </tr>\r\n            );\r\n          }\r\n        )}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nconst App = () => {\r\n  const [titleData, setTitleData] = useState([]);\r\n  const [current, setCurrent] = useState({\r\n    title: \"\",\r\n    rating: \"\",\r\n    release: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    getTitleData().then(setTitleData);\r\n  }, []);\r\n\r\n  const handleClick = async () => {\r\n    try {\r\n      if (titleData.length > 0) {\r\n        let randomTitle: number = Math.floor(Math.random() * titleData.length);\r\n        const { title, rt_score, release_date } = titleData[randomTitle];\r\n        setCurrent({ title: title, rating: rt_score, release: release_date });\r\n      }\r\n    } catch (error) {\r\n      console.log(\"error\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"application\">\r\n      <div className=\"homepage-bgimage\">\r\n        <div>\r\n          {/* <div className=\"centered-top\"> */}\r\n          <h1 className=\"my-5\">Stuido Ghibli Films Random Generator</h1>\r\n          <br />\r\n          <div className=\"bg-frosty container rounded transition-all\">\r\n            <h3>{current.title}</h3>\r\n            <p>\r\n              {!(current.title.length === 0)\r\n                ? `was released in ${current.release} and scored a ${current.rating}`\r\n                : \"Click the button to get a random title!\"}\r\n            </p>\r\n          </div>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-primary my-5\"\r\n            onClick={handleClick}\r\n          >\r\n            Random Film\r\n          </button>\r\n        </div>\r\n        <div className=\"container\">\r\n          <MyTitleList titleData={titleData} moreData={\"i am more data\"} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}